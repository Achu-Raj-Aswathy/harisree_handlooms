<%- include('./partials/header') %>
  <%- include('./partials/userHeader') %>

    <div class="axil-checkout-area axil-section-gap">
      <div class="container">
        <form id="checkoutForm">
          <div class="row">
            <div class="col-lg-6">
              <div class="axil-checkout-billing">
                <h4 class="title mb--40">Billing details</h4>

                    <div class="form-group">
                      <label> Name <span>*</span></label>
                      <input type="text" id="first-name" placeholder="Name" value="<%- user.name %>" required>
                    </div>

                <div class="form-group">
                  <label>Country/ Region <span>*</span></label>
                  <select id="billingCountry" name="billingCountry" required>
                    <option value="">Select Country</option>
                    <!-- Add more countries -->
                  </select>
                </div>

                <div class="form-group">
                  <label>State <span>*</span></label>
                  <input type="text" name="billingState" id="billingState" class="mb--15" placeholder="State"
                    value="<%= user.address[0]?.billing?.state || '' %>" required>
                  <input type="text" name="billingAddressLine2" id="billingAddressLine2"
                    placeholder="Apartment, suite, unit, etc. (optional)"
                    value="<%= user.address[0]?.billing?.addressLine || '' %>">
                </div>

                <div class="form-group">
                  <label>Town/ City <span>*</span></label>
                  <input type="text" name="billingCity" id="billingCity" placeholder="Town/City"
                    value="<%= user.address[0]?.billing?.city || '' %>" required>
                </div>

                <div class="form-group">
                  <label>PIN Code / ZIP Code <span>*</span></label>
                  <input type="text" name="billingPincode" id="billingPincode" placeholder="ZIP Code"
                    value="<%= user.address[0]?.billing?.pincode || '' %>" required>
                </div>

               <div class="form-group" style="position: relative;">
  <label>Phone <span>*</span></label>
  <input
    type="tel"
    id="phone"
    name="phone"
    value="<%- user.mobile %>"
    placeholder="Phone"
    required
    oninput="validatePhone()"
    style="border: 1px solid #ccc; padding: 8px; width: 100%;"
  />
  <small id="phoneError" style="color: red; display: none;">Please enter a valid 10-digit phone number.</small>
</div>
               <div class="form-group" style="position: relative;">
  <label>Email Address <span>*</span></label>
  <input
    type="email"
    id="email"
    value="<%- user.email %>"
    placeholder="Email"
    required
    oninput="validateEmail()"
    style="border: 1px solid #ccc; padding: 8px; width: 100%;"
  />
  <small id="emailError" style="color: red; display: none;">Please enter a valid email address.</small>
</div>
                
                <div class="form-group">
                  <label>Other Notes (optional)</label>
                  <textarea id="notes" rows="2"
                    placeholder="Notes about your order, e.g. special notes for delivery."></textarea>
                </div>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="axil-order-summery order-checkout-summery">
                <h5 class="title mb--20">Your Order</h5>
                <div class="summery-table-wrap">
                  <table class="table summery-table">
                    <thead>
                      <tr>
                        <th>Product</th>
                        <th>Subtotal</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (cart && cart.length> 0) { %>
                        <% cart.forEach(item=> { %>
                          <tr class="order-product">
                            <td>
                              <%= item.name %> <span class="quantity">x<%= item.quantity %></span>
                            </td>
                            <td>₹<%= item.subtotal %>
                            </td>
                          </tr>
                          <% }) %>
                            <% } else { %>
                              <tr>
                                <td colspan="2">No products in cart.</td>
                              </tr>
                              <% } %>

                                <tr class="order-subtotal">
                                  <td>Subtotal</td>
                                  <td>₹<%= total %>
                                  </td>
                                </tr>

                                <tr class="order-shipping">
                                  <td colspan="2">
                                    <div class="shipping-amount">
                                      <span class="title">Shipping Charge</span>
                                      <span class="amount" id="shippingCharge">₹0.00</span>
                                    </div>
                                    <div class="coupon-discount d-flex justify-content-between">
                                      <span class="title">Coupon Discount</span>
                                      <span class="discount" id="discount">₹0.00</span>
                                    </div>
                                  </td>

                                </tr>

                                <tr class="order-total">
                                  <td>Total</td>
                                  <td class="order-total-amount" id="total-amount">₹<%= total %>
                                  </td>
                                </tr>

                                <input type="hidden" id="baseTotal" value="<%= total %>">

                    </tbody>
                  </table>
                </div>


                <!-- Coupon START -->
                <div class="col-md-12 col-xl-12">
                  <div class="card border-0 shadow-sm rounded-4 p-3">
                    <h5 class="mb-3 fw-bold">Offer & Discount</h5>

                    <!-- None Option -->
                    <div class="bg-light rounded-3 d-flex align-items-center justify-content-between p-3 mb-3">
                      <div>
                        <div class="form-check mb-1">
                          <input class="form-check-input" type="radio" name="selectedCoupon" id="noneCoupon"
                            value="none" checked>
                          <label class="form-check-label fw-bold" for="noneCoupon">None</label>
                        </div>
                        <p class="mb-0 small text-muted">No discount applied.</p>
                      </div>
                      <div class="text-muted fw-bold fs-5">₹0</div>
                    </div>

                    <!-- Loop through valid coupons -->
                      <% if (coupons.length> 0) { %>
                        <% coupons.forEach((coupon, index)=> { %>
                          <div class="bg-light rounded-3 d-flex align-items-center justify-content-between p-3 mb-3">
                            <div>
                              <div class="form-check mb-1">
                                <input class="form-check-input" type="radio" name="selectedCoupon"
                                  id="coupon_<%= index %>" value="<%= coupon.code %>">
                                <label class="form-check-label fw-bold" for="coupon_<%= index %>">
                                  <%= coupon.code %>
                                </label>
                              </div>
                              <!-- <p class="mb-0 small text-muted">
                                Save <strong id="discountAmountDisplay">
                                  <%= coupon.discount %> %
                                </strong> with <%= coupon.code %>
                              </p> -->
                            </div>
                            <div class="text-success fw-bold fs-5">–<%= coupon.discountPercentage %> %
                            </div>
                          </div>
                          <% }); %>
                            <% } else { %>
                              <p class="text-muted">No active coupons available at the moment.</p>
                              <% } %>

                                <!-- Manual Coupon Entry -->
                                <div class="input-group">
                                  <input class="form-control" placeholder="Coupon code" id="couponCodeInput" />
                                  <button type="button" class="btn btn-primary mt-3" id="applyCouponBtn">Apply</button>
                                </div>
                  </div>
                </div>
                <!-- Coupon END -->
<div class="order-payment-method mt-5">

  <!-- Cash on Delivery Option -->
  <!-- <div class="single-payment mb-3">
    <div class="input-group justify-content-between align-items-center">
      <input type="radio" id="radioCod" name="payment" value="cod">
      <label for="radioCod">Cash on Delivery</label>
    </div>
    <p>Pay with cash upon product delivery.</p> -->

    <!-- Cash on Delivery Checkbox -->
    <!-- <div class="mt-2 ms-3">
  <button type="button" class="btn btn-outline-success" id="codConfirmBtn">
    Confirm Cash on Delivery
  </button>
</div> -->

  </div>

  <!-- PhonePe Option -->
  <div class="single-payment">
    <div class="input-group justify-content-between align-items-center">
      <input type="radio" id="radioPhonepe" name="payment" value="phonepe" checked>
      <label for="radioPhonepe">PhonePe</label>
      <img src="assets/images/others/payment.png" alt="PhonePe payment">
    </div>
    <p>Pay via PhonePe; use UPI or credit card to complete your order.</p>
  </div>
</div>

                <!-- <div class="order-payment-method mt-5">

                  <div class="single-payment">
                    <div class="input-group justify-content-between align-items-center">
                      <input type="radio" id="radio6" name="payment" checked>
                      <label for="radio6">PhonePe</label>
                      <img src="assets/images/others/payment.png" alt="Paypal payment">
                    </div>
                    <p>Pay via PayPal; you can pay with your credit card if you don’t have a PayPal account.</p>
                  </div>
                </div> -->
              <button type="submit" class="axil-btn btn-bg-primary checkout-btn">Process to Checkout</button>
                <!-- <button type="button" class="axil-btn btn-bg-primary checkout-btn">Process to Checkout</button> -->
              </div>
            </div>
          </div>
        </form>
      </div>

      <%- include('./partials/footer') %>
    </div>
    
   <script>
  document.addEventListener("DOMContentLoaded", function () {
    const couponRadios = document.querySelectorAll('input[name="selectedCoupon"]');
    const manualInput = document.getElementById("couponCodeInput");
    const applyBtn = document.getElementById("applyCouponBtn");

    const discountSpan = document.getElementById("discount");
    const totalAmountSpan = document.getElementById("total-amount");
    const shippingChargeSpan = document.getElementById("shippingCharge");
    const billingStateInput = document.getElementById("billingState");

    const baseTotal = parseFloat(document.getElementById("baseTotal").value);
    const coupons = <%- JSON.stringify(coupons) %>;

    let currentDiscountPercentage = 0;

    function formatCurrency(value) {
      return `₹${value.toFixed(2)}`;
    }

    function getShippingCharge() {
      const state = billingStateInput.value.trim().toLowerCase();
      return state === "kerala" ? 0 : 50;
    }

    function updateTotals() {
      const shippingCharge = getShippingCharge();
      shippingChargeSpan.textContent = formatCurrency(shippingCharge);

      const discountAmount = ((baseTotal + shippingCharge) * currentDiscountPercentage) / 100;
      discountSpan.textContent = formatCurrency(discountAmount);

      const finalTotal = baseTotal + shippingCharge - discountAmount;
      totalAmountSpan.textContent = formatCurrency(finalTotal > 0 ? finalTotal : 0);
    }

    function applyCoupon(code) {
      if (code === "none") {
        currentDiscountPercentage = 0;
        updateTotals();
        return;
      }

      const selected = coupons.find(c => c.code.toLowerCase() === code.toLowerCase());
      if (!selected) {
        alert("Invalid or expired coupon code.");
        currentDiscountPercentage = 0;
        document.getElementById("noneCoupon").checked = true;
        updateTotals();
        return;
      }

      currentDiscountPercentage = selected.discountPercentage;
      updateTotals();
    }

    // Listen for coupon radio buttons
    couponRadios.forEach(radio => {
      radio.addEventListener("change", function () {
        applyCoupon(this.value);
      });
    });

    // Manual Apply Button
    applyBtn.addEventListener("click", function () {
      const code = manualInput.value.trim();
      if (code === "") {
        alert("Enter a coupon code");
        return;
      }

      applyCoupon(code);

      // Select the matching radio if exists
      couponRadios.forEach(radio => {
        radio.checked = radio.value.toLowerCase() === code.toLowerCase();
      });
    });

    // Watch for changes to state input
    billingStateInput.addEventListener("input", updateTotals);

    // Apply default selected coupon on load
    const selectedRadio = document.querySelector('input[name="selectedCoupon"]:checked');
    if (selectedRadio) applyCoupon(selectedRadio.value);
  });
</script>

    <script>
      async function populateCountryDropdowns() {
        try {
          const response = await fetch("/api/countries");
          const countries = await response.json();

          const shippingCountrys = document.querySelectorAll("#shippingCountry");
          const billingCountrys = document.querySelectorAll("#billingCountry");

          countries.forEach(country => {
            const option = document.createElement("option");
            option.value = country;
            option.textContent = country;

            shippingCountrys.forEach(select => {
              select.appendChild(option.cloneNode(true));
            });

            billingCountrys.forEach(select => {
              select.appendChild(option.cloneNode(true));
            });
          });
        } catch (err) {
          console.error("Error fetching country list:", err);
        }
      }

      document.addEventListener("DOMContentLoaded", () => {
        setTimeout(populateCountryDropdowns, 200);
      });
    </script>

    <script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkoutForm = document.getElementById("checkoutForm");

    checkoutForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      const cartData = <%- JSON.stringify({ items: cart, total }) %>;

      // Grab all billing details
const address = {
  name: document.getElementById("first-name").value,
  phone: document.getElementById("phone").value,
  email: document.getElementById("email").value,
  state: document.getElementById("billingState").value,
  city: document.getElementById("billingCity").value,
  pincode: document.getElementById("billingPincode").value,
  line: document.getElementById("billingAddressLine2").value,
};

// Get applied values
const shippingCharge = parseFloat(document.getElementById("shippingCharge").textContent.replace(/[^\d.]/g, "")) || 0;
const discount = parseFloat(document.getElementById("discount").textContent.replace(/[^\d.]/g, "")) || 0;
const total = parseFloat(document.getElementById("total-amount").textContent.replace(/[^\d.]/g, "")) || 0;

      try {
        const response = await fetch("/create-phonepe-order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
  cartData: JSON.stringify(cartData),
  address,
  shippingCharge,
  discount,
  total
})
        });
        const result = await response.json();

        if (result.checkoutPageUrl) {
          window.location.href = result.checkoutPageUrl;
        } else {
          alert("❌ Payment URL not received.");
        }
      } catch (err) {
        console.error("❌ Payment error:", err);
        alert("Something went wrong.");
      }
    });
  });
</script>

    <script>
      console.log("Checkout page script loaded");
      document.addEventListener("DOMContentLoaded", () => {
        console.log("DOM fully loaded and parsed");
        const checkoutBtn = document.querySelector(".checkout-btn");
        const checkoutForm = document.getElementById("checkoutForm");
      checkoutForm.addEventListener("submit", async function (e) {
  e.preventDefault();

  const selectedPayment = document.querySelector('input[name="payment"]:checked')?.value;
  const codChecked = document.getElementById("codConfirm")?.checked;
  const cartData = <%- JSON.stringify({ items: cart, total }) %>;

  if (selectedPayment === "cod") {
    if (!codChecked) {
      alert("Please check the box to confirm Cash on Delivery.");
      return;
    }
    // Redirect to COD confirmation page
    window.location.href = "/cod-confirmation";
    return;
  }

  // If PhonePe is selected
  try {
    const response = await fetch("/create-phonepe-order", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        cartData: JSON.stringify(cartData)
      })
    });

    const result = await response.json();

    if (result.checkoutPageUrl) {
      window.location.href = result.checkoutPageUrl;
    } else {
      alert("Payment initiation failed");
    }
  } catch (err) {
    console.error("PhonePe error:", err);
    alert("Something went wrong during payment");
  }
});

    </script>

  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkoutForm = document.getElementById("checkoutForm");

    function showAlert(msg) {
      alert(msg);
    }

    function validateEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

    function validatePhone(phone) {
      return /^[6-9]\d{9}$/.test(phone);
    }

    function validatePincode(pin) {
      return /^\d{6}$/.test(pin);
    }

    function validateForm() {
      const name = document.getElementById("first-name").value.trim();
      const phone = document.getElementById("phone").value.trim();
      const email = document.getElementById("email").value.trim();
      const state = document.getElementById("billingState").value.trim();
      const city = document.getElementById("billingCity").value.trim();
      const pincode = document.getElementById("billingPincode").value.trim();
      const country = document.getElementById("billingCountry").value;

      if (!name) return showAlert("Please enter your name.");
      if (!country) return showAlert("Please select your country.");
      if (!state) return showAlert("Please enter your state.");
      if (!city) return showAlert("Please enter your city.");
      if (!pincode || !validatePincode(pincode)) return showAlert("Enter a valid 6-digit PIN Code.");
      if (!phone || !validatePhone(phone)) return showAlert("Enter a valid 10-digit mobile number.");
      if (!email || !validateEmail(email)) return showAlert("Enter a valid email address.");

      // If shipping checkbox is checked, validate shipping fields too
      const isShippingDifferent = document.getElementById("checkbox2").checked;
      if (isShippingDifferent) {
        const shippingCountry = document.getElementById("shippingCountry").value;
        const shippingState = document.getElementById("shippingState").value.trim();
        const shippingCity = document.getElementById("shippingCity").value.trim();
        const shippingPincode = document.getElementById("shippingPincode").value.trim();

        if (!shippingCountry) return showAlert("Please select shipping country.");
        if (!shippingState) return showAlert("Please enter shipping state.");
        if (!shippingCity) return showAlert("Please enter shipping city.");
        if (!shippingPincode || !validatePincode(shippingPincode)) {
          return showAlert("Enter a valid 6-digit shipping PIN Code.");
        }
      }

      return true;
    }

    checkoutForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      if (!validateForm()) return;

      const selectedPayment = document.querySelector('input[name="payment"]:checked')?.value;
      const codChecked = document.getElementById("codConfirm")?.checked;
      const cartData = <%- JSON.stringify({ items: cart, total }) %>;

      if (selectedPayment === "cod") {
        if (!codChecked) {
          alert("Please check the box to confirm Cash on Delivery.");
          return;
        }

        window.location.href = "/cod-confirmation";
        return;
      }

      // Collect billing address
      const address = {
        name: document.getElementById("first-name").value,
        phone: document.getElementById("phone").value,
        email: document.getElementById("email").value,
        state: document.getElementById("billingState").value,
        city: document.getElementById("billingCity").value,
        pincode: document.getElementById("billingPincode").value,
        line: document.getElementById("billingAddressLine2").value,
      };

      const shippingCharge = parseFloat(document.getElementById("shippingCharge").textContent.replace(/[^\d.]/g, "")) || 0;
      const discount = parseFloat(document.getElementById("discount").textContent.replace(/[^\d.]/g, "")) || 0;
      const total = parseFloat(document.getElementById("total-amount").textContent.replace(/[^\d.]/g, "")) || 0;

      try {
        const response = await fetch("/create-phonepe-order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            cartData: JSON.stringify(cartData),
            address,
            shippingCharge,
            discount,
            total
          })
        });

        const result = await response.json();

        if (result.checkoutPageUrl) {
          window.location.href = result.checkoutPageUrl;
        } else {
          alert("❌ Payment URL not received.");
        }
      } catch (err) {
        console.error("❌ Payment error:", err);
        alert("Something went wrong.");
      }
    });
  });
</script>
<script>
  function validatePhone() {
    const phoneInput = document.getElementById("phone");
    const errorText = document.getElementById("phoneError");
    const phoneValue = phoneInput.value;

    // Only allow digits
    phoneInput.value = phoneValue.replace(/[^0-9]/g, '');

    if (phoneInput.value.length !== 10) {
      errorText.style.display = "block";
    } else {
      errorText.style.display = "none";
    }
  }
</script>

<script>
  function validateEmail() {
    const emailInput = document.getElementById("email");
    const emailError = document.getElementById("emailError");
    const emailValue = emailInput.value;

    const emailPattern = /^[^@\s]+@[^@\s]+\.[^@\s]+$/;

    if (!emailPattern.test(emailValue)) {
      emailError.style.display = "block";
    } else {
      emailError.style.display = "none";
    }
  }
</script>