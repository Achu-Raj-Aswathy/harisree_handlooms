<%- include('./partials/header') %>
  <%- include('./partials/userHeader') %>

    <div class="axil-checkout-area axil-section-gap">
      <div class="container">
        <form id="checkoutForm">
          <div class="row">
            <div class="col-lg-6">
              <div class="axil-checkout-billing">
                <h4 class="title mb--40">Billing details</h4>

                    <div class="form-group">
                      <label> Name <span>*</span></label>
                      <input type="text" id="first-name" placeholder="Name" value="<%- user.name %>" required>
                    </div>

                <div class="form-group">
                  <label>Country/ Region <span>*</span></label>
                  <select id="billingCountry" name="billingCountry" required>
                    <option value="">Select Country</option>
                    <option value="India">India</option>
                  </select>
                </div>

<div class="form-group">
  <label>State / Union Territory <span>*</span></label>
  <select id="billingState" name="billingState" required>
    <option value="">Select State / UT</option>

    <!-- ðŸŸ¢ States -->
    <option value="Andhra Pradesh">Andhra Pradesh</option>
    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
    <option value="Assam">Assam</option>
    <option value="Bihar">Bihar</option>
    <option value="Chhattisgarh">Chhattisgarh</option>
    <option value="Goa">Goa</option>
    <option value="Gujarat">Gujarat</option>
    <option value="Haryana">Haryana</option>
    <option value="Himachal Pradesh">Himachal Pradesh</option>
    <option value="Jharkhand">Jharkhand</option>
    <option value="Karnataka">Karnataka</option>
    <option value="Kerala">Kerala</option>
    <option value="Madhya Pradesh">Madhya Pradesh</option>
    <option value="Maharashtra">Maharashtra</option>
    <option value="Manipur">Manipur</option>
    <option value="Meghalaya">Meghalaya</option>
    <option value="Mizoram">Mizoram</option>
    <option value="Nagaland">Nagaland</option>
    <option value="Odisha">Odisha</option>
    <option value="Punjab">Punjab</option>
    <option value="Rajasthan">Rajasthan</option>
    <option value="Sikkim">Sikkim</option>
    <option value="Tamil Nadu">Tamil Nadu</option>
    <option value="Telangana">Telangana</option>
    <option value="Tripura">Tripura</option>
    <option value="Uttar Pradesh">Uttar Pradesh</option>
    <option value="Uttarakhand">Uttarakhand</option>
    <option value="West Bengal">West Bengal</option>

    <!-- ðŸŸ£ Union Territories -->
    <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
    <option value="Chandigarh">Chandigarh</option>
    <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</option>
    <option value="Delhi">Delhi</option>
    <option value="Jammu and Kashmir">Jammu and Kashmir</option>
    <option value="Ladakh">Ladakh</option>
    <option value="Lakshadweep">Lakshadweep</option>
    <option value="Puducherry">Puducherry</option>
  </select>
</div>

                <div class="form-group">
                  <label>Apartment <span>*</span></label>
                  <input type="text" name="billingAddressLine2" id="billingAddressLine2"
                    placeholder="Apartment, suite, unit, etc."
                    value="<%= user.address[0]?.billing?.addressLine || '' %>" required>
                </div>

                <div class="form-group">
                  <label>Town/ City <span>*</span></label>
                  <input type="text" name="billingCity" id="billingCity" placeholder="Town/City"
                    value="<%= user.address[0]?.billing?.city || '' %>" required>
                </div>

                <div class="form-group">
                  <label>PIN Code / ZIP Code <span>*</span></label>
                  <input type="text" name="billingPincode" id="billingPincode" placeholder="ZIP Code"
                    value="<%= user.address[0]?.billing?.pincode || '' %>" required>
                </div>

               <div class="form-group" style="position: relative;">
  <label>Phone <span>*</span></label>
  <input
    type="tel"
    id="phone"
    name="phone"
    value="<%- user.mobile %>"
    placeholder="Phone"
    required
    oninput="validatePhone()"
    style="border: 1px solid #ccc; padding: 8px; width: 100%;"
  />
  <small id="phoneError" style="color: red; display: none;">Please enter a valid 10-digit phone number.</small>
</div>
               <div class="form-group" style="position: relative;">
  <label>Email Address <span>*</span></label>
  <input
    type="email"
    id="email"
    value="<%- user.email %>"
    placeholder="Email"
    required
    oninput="validateEmail()"
    style="border: 1px solid #ccc; padding: 8px; width: 100%;"
  />
  <small id="emailError" style="color: red; display: none;">Please enter a valid email address.</small>
</div>
                
                <div class="form-group">
                  <label>Other Notes (optional)</label>
                  <textarea id="notes" rows="2"
                    placeholder="Notes about your order, e.g. special notes for delivery."></textarea>
                </div>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="axil-order-summery order-checkout-summery">
                <h5 class="title mb--20">Your Order</h5>
                <div class="summery-table-wrap">
                  <table class="table summery-table">
                    <thead>
                      <tr>
                        <th>Product</th>
                        <th>Subtotal</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% if (cart && cart.length> 0) { %>
                        <% cart.forEach(item=> { %>
                          <tr class="order-product">
                            <td>
                              <%= item.name %> <span class="quantity">x<%= item.quantity %></span>
                            </td>
                            <td>â‚¹<%= item.subtotal %>
                            </td>
                          </tr>
                          <% }) %>
                            <% } else { %>
                              <tr>
                                <td colspan="2">No products in cart.</td>
                              </tr>
                              <% } %>

                                <tr class="order-subtotal" id="subtotal">
                                  <td>Subtotal</td>
                                  <td>â‚¹<%= total %>
                                  </td>
                                </tr>

                                <tr class="order-shipping">
                                  <td colspan="2">
                                    <div class="shipping-amount">
                                      <span class="title">Shipping Charge</span>
                                      <span class="amount" id="shippingCharge">â‚¹0.00</span>
                                    </div>
                                    <div class="coupon-discount d-flex justify-content-between">
                                      <span class="title">Coupon Discount</span>
                                      <span>-<span class="discount" id="discount"> â‚¹0.00</span></span>
                                    </div>
                                  </td>

                                </tr>

                                <tr class="order-total">
                                  <td>Total</td>
                                  <td class="order-total-amount" id="total-amount">â‚¹<%= total %>
                                  </td>
                                </tr>

                                <input type="hidden" id="baseTotal" value="<%= total %>">

                    </tbody>
                  </table>
                </div>


                <!-- Coupon START -->
                <div class="col-md-12 col-xl-12">
                  <div class="card border-0 shadow-sm rounded-4 p-3">
                    <h5 class="mb-3 fw-bold">Offer & Discount</h5>

                    <!-- None Option -->
                    <div class="bg-light rounded-3 d-flex align-items-center justify-content-between p-3 mb-3">
                      <div>
                        <div class="form-check mb-1">
                          <input class="form-check-input" type="radio" name="selectedCoupon" id="noneCoupon"
                            value="none" checked>
                          <label class="form-check-label fw-bold" for="noneCoupon">None</label>
                        </div>
                        <p class="mb-0 small text-muted">No discount applied.</p>
                      </div>
                      <div class="text-muted fw-bold fs-5">â‚¹0</div>
                    </div>

                    <!-- Loop through valid coupons -->
                      <% if (coupons.length> 0) { %>
                        <% coupons.forEach((coupon, index)=> { %>
                          <div class="bg-light rounded-3 d-flex align-items-center justify-content-between p-3 mb-3">
                            <div>
                              <div class="form-check mb-1">
                                <input class="form-check-input" type="radio" name="selectedCoupon"
                                  id="coupon_<%= index %>" value="<%= coupon.code %>" data-id="<%= coupon._id %>">
                                <label class="form-check-label fw-bold" for="coupon_<%= index %>">
                                  <%= coupon.code %>
                                </label>
                              </div>
                              <!-- <p class="mb-0 small text-muted">
                                Save <strong id="discountAmountDisplay">
                                  <%= coupon.discount %> %
                                </strong> with <%= coupon.code %>
                              </p> -->
                            </div>
                            <div class="text-success fw-bold fs-5">â€“<%= coupon.discountPercentage %> %
                            </div>
                          </div>
                          <% }); %>
                            <% } else { %>
                              <p class="text-muted">No active coupons available at the moment.</p>
                              <% } %>

                                <!-- Manual Coupon Entry -->
                                <div class="input-group">
                                  <input class="form-control" placeholder="Coupon code" id="couponCodeInput" />
                                  
<!-- Coupon Apply Button -->
<button type="button" id="applyCouponBtn" style="background-color: #f1c40f; color: black; border: none;" class="mt-3">
  Apply
</button>
  </div>
                  </div>
                </div>
                <!-- Coupon END -->
<div class="order-payment-method mt-5">

  <!-- Cash on Delivery Option -->
  <div class="single-payment mb-3">
    <div class="input-group justify-content-between align-items-center">
      <input type="radio" id="radioCod" name="payment" value="cod">
      <label for="radioCod">Cash on Delivery</label>
    </div>
    <p>Pay with cash upon product delivery.</p>

    <!-- Cash on Delivery Checkbox -->
    <!-- <div class="mt-2 ms-3">
  <button type="button" class="axil-btn" style="background-color: #f1c40f; color: black; border: none;" id="codConfirmBtn" >
    Confirm Cash on Delivery
  </button>
</div> -->

  </div>

  <!-- PhonePe Option -->
  <div class="single-payment">
    <div class="input-group justify-content-between align-items-center">
      <input type="radio" id="radioPhonepe" name="payment" value="phonepe" checked>
      <label for="radioPhonepe">PhonePe</label>
      <img src="assets/images/others/payment.png" alt="PhonePe Payment">
    </div>
    <p>Pay via PhonePe; use UPI or credit card to complete your order.</p>
  </div>
</div>

                <!-- <div class="order-payment-method mt-5">

                  <div class="single-payment">
                    <div class="input-group justify-content-between align-items-center">
                      <input type="radio" id="radio6" name="payment" checked>
                      <label for="radio6">PhonePe</label>
                      <img src="assets/images/others/payment.png" alt="Paypal payment">
                    </div>
                    <p>Pay via PayPal; you can pay with your credit card if you donâ€™t have a PayPal account.</p>
                  </div>
                </div> -->

                <!-- COD Button -->
<button type="button" id="codConfirmBtn" class="axil-btn" style="display:none; background-color: #f1c40f; color: black; border: none;">
  Confirm Cash on Delivery
</button>

<!-- PhonePe Button -->
<button type="submit" id="phonepeCheckoutBtn" class="axil-btn checkout-btn" style="display:none; background-color: #f1c40f; color: black; border: none;">
  Process to Checkout
</button>

              <!-- <button type="submit" class="axil-btn checkout-btn" style="background-color: #f1c40f; color: black; border: none;" >
                Process to Checkout
              </button> -->
              </div>
            </div>
          </div>
        </form>
      </div>

      <%- include('./partials/footer') %>
    </div>
    
   <script>
  document.addEventListener("DOMContentLoaded", function () {
    const couponRadios = document.querySelectorAll('input[name="selectedCoupon"]');
    const manualInput = document.getElementById("couponCodeInput");
    const applyBtn = document.getElementById("applyCouponBtn");

    const discountSpan = document.getElementById("discount");
    const totalAmountSpan = document.getElementById("total-amount");
    const shippingChargeSpan = document.getElementById("shippingCharge");
    const billingStateInput = document.getElementById("billingState");

    const baseTotal = parseFloat(document.getElementById("baseTotal").value);
    const coupons = <%- JSON.stringify(coupons) %>;

    let currentDiscountPercentage = 0;

    function formatCurrency(value) {
      return `â‚¹${value.toFixed(2)}`;
    }

    function getShippingCharge() {
      const state = billingStateInput.value.trim().toLowerCase();
      return state === "kerala" ? 0 : 50;
    }

    function updateTotals() {
      const shippingCharge = getShippingCharge();
      shippingChargeSpan.textContent = formatCurrency(shippingCharge);

      const discountAmount = ((baseTotal + shippingCharge) * currentDiscountPercentage) / 100;
      discountSpan.textContent = formatCurrency(discountAmount);

      const finalTotal = baseTotal + shippingCharge - discountAmount;
      totalAmountSpan.textContent = formatCurrency(finalTotal > 0 ? finalTotal : 0);
    }

    function applyCoupon(code) {
      if (code === "none") {
        currentDiscountPercentage = 0;
        updateTotals();
        return;
      }

      const selected = coupons.find(c => c.code.toLowerCase() === code.toLowerCase());
      if (!selected) {
        alert("Invalid or expired coupon code.");
        currentDiscountPercentage = 0;
        document.getElementById("noneCoupon").checked = true;
        updateTotals();
        return;
      }

      currentDiscountPercentage = selected.discountPercentage;
      updateTotals();
    }

    // Listen for coupon radio buttons
    couponRadios.forEach(radio => {
      radio.addEventListener("change", function () {
        applyCoupon(this.value);
      });
    });

    // Manual Apply Button
    applyBtn.addEventListener("click", function (e) {
  e.preventDefault(); // extra safeguard
  const code = manualInput.value.trim();
  if (code === "") {
    alert("Enter a coupon code");
    return;
  }

      applyCoupon(code);

      // Select the matching radio if exists
      couponRadios.forEach(radio => {
        radio.checked = radio.value.toLowerCase() === code.toLowerCase();
      });
    });

    // Watch for changes to state input
    billingStateInput.addEventListener("input", () => {
  updateTotals();
});
billingStateInput.addEventListener("change", () => {
  updateTotals();
});

    // Apply default selected coupon on load
    const selectedRadio = document.querySelector('input[name="selectedCoupon"]:checked');
    if (selectedRadio) applyCoupon(selectedRadio.value);
  });
</script>

    <!-- <script>
      // async function populateCountryDropdowns() {
      //   try {
      //     const response = await fetch("/api/countries");
      //     const countries = await response.json();

      //     const shippingCountrys = document.querySelectorAll("#shippingCountry");
      //     const billingCountrys = document.querySelectorAll("#billingCountry");

      //     countries.forEach(country => {
      //       const option = document.createElement("option");
      //       option.value = country;
      //       option.textContent = country;

      //       shippingCountrys.forEach(select => {
      //         select.appendChild(option.cloneNode(true));
      //       });

      //       billingCountrys.forEach(select => {
      //         select.appendChild(option.cloneNode(true));
      //       });
      //     });
      //   } catch (err) {
      //     console.error("Error fetching country list:", err);
      //   }
      // }

      // document.addEventListener("DOMContentLoaded", () => {
      //   setTimeout(populateCountryDropdowns, 200);
      // });
      fetch("/api/countries")
    .then(res => res.json())
    .then(countries => {
      const countrySelect = document.getElementById("billingCountry");
      countries.forEach(country => {
        const opt = document.createElement("option");
        opt.value = country;
        opt.textContent = country;
        countrySelect.appendChild(opt);
      });
    });

  // When country changes, fetch states
  document.getElementById("billingCountry").addEventListener("change", function() {
    const countryName = this.value;
    const stateSelect = document.getElementById("billingState");
    stateSelect.innerHTML = '<option value="">Select State</option>';
    stateSelect.disabled = true;

    if (countryName) {
      fetch(`/api/states/${countryName}`)
        .then(res => res.json())
        .then(states => {
          states.forEach(state => {
            const opt = document.createElement("option");
            opt.value = state;
            opt.textContent = state;
            stateSelect.appendChild(opt);
          });
          stateSelect.disabled = false;
        });
    }
  });
    </script> -->

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkoutForm = document.getElementById("checkoutForm");

    checkoutForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      const cartData = <%- JSON.stringify({ items: cart, total }) %>;

      const selectedCouponRadio = document.querySelector('input[name="selectedCoupon"]:checked');
let couponCode = null;
let couponId = null;

if (selectedCouponRadio && selectedCouponRadio.value !== "none") {
  couponCode = selectedCouponRadio.value;
  couponId = selectedCouponRadio.getAttribute("data-id");
}

      // Grab all billing details
const address = {
  name: document.getElementById("first-name").value,
  phone: document.getElementById("phone").value,
  email: document.getElementById("email").value,
  state: document.getElementById("billingState").value,
  city: document.getElementById("billingCity").value,
  pincode: document.getElementById("billingPincode").value,
  line: document.getElementById("billingAddressLine2").value,
  country: document.getElementById("billingCountry").value,
};

      if (!address.name || !address.phone || !address.email || !address.state || 
          !address.city || !address.pincode || !address.line || !address.country) {
        Swal.fire({
          icon: "warning",
          title: "Missing Information",
          text: "Please fill in all required billing details before proceeding."
        });
        return;
      }

// Get applied values
const subtotal = parseFloat(document.getElementById("subtotal").textContent.replace(/[^\d.]/g, "")) || 0;
const shippingCharge = parseFloat(document.getElementById("shippingCharge").textContent.replace(/[^\d.]/g, "")) || 0;
const discount = parseFloat(document.getElementById("discount").textContent.replace(/[^\d.]/g, "")) || 0;
const total = parseFloat(document.getElementById("total-amount").textContent.replace(/[^\d.]/g, "")) || 0;

      try {
        const response = await fetch("/create-phonepe-order", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
  cartData: JSON.stringify(cartData),
  address,
  subtotal,
  shippingCharge,
  discount,
  total,
    couponCode,
  couponId
})
        });
        const result = await response.json();

        if (result.checkoutPageUrl) {
          window.location.href = result.checkoutPageUrl;
        } else {
          Swal.fire({
            icon: "error",
            title: "Payment Failed",
            text: "Payment URL not received."
          });
        }
      } catch (err) {
        console.error("Payment error:", err);
        Swal.fire({
          icon: "error",
          title: "Something went wrong",
          text: "Please try again later."
        });
      }
    });
  });
</script>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const codBtn = document.getElementById("codConfirmBtn");

  codBtn.addEventListener("click", () => {
    // Collect required fields
    const name = document.getElementById("first-name").value.trim();
    const country = document.getElementById("billingCountry").value.trim();
    const state = document.getElementById("billingState").value.trim();
    const addressLine = document.getElementById("billingAddressLine2").value.trim();
    const city = document.getElementById("billingCity").value.trim();
    const pincode = document.getElementById("billingPincode").value.trim();
    const phone = document.getElementById("phone").value.trim();
    const email = document.getElementById("email").value.trim();

    // Simple validation
    if (!name || !country || !state || !addressLine || !city || !pincode || !phone || !email) {
      Swal.fire({
        icon: "warning",
        title: "Missing Details",
        text: "Please fill in all required billing details before confirming COD.",
      });
      return;
    }

    placeCodOrder();
  });

  async function placeCodOrder() {
      // âœ… Handle coupon same as PhonePe
      const selectedCouponRadio = document.querySelector('input[name="selectedCoupon"]:checked');
      let couponCode = null;
      let couponId = null;

      if (selectedCouponRadio && selectedCouponRadio.value !== "none") {
        couponCode = selectedCouponRadio.value;
        couponId = selectedCouponRadio.getAttribute("data-id");
      }

    try {
      Swal.fire({
      title: "Processing...",
      text: "Please wait while we process your order.",
      allowOutsideClick: false,
      allowEscapeKey: false,
      didOpen: () => {
        Swal.showLoading();
      }
    });

      const response = await fetch("/create-cod-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          cartData: JSON.stringify({ items: <%- JSON.stringify(cart) %> }),
          address: {
            name: document.getElementById("first-name").value,
            line: document.getElementById("billingAddressLine2").value,
            city: document.getElementById("billingCity").value,
            state: document.getElementById("billingState").value,
            country: document.getElementById("billingCountry").value,
            pincode: document.getElementById("billingPincode").value,
            phone: document.getElementById("phone").value,
            email: document.getElementById("email").value
          },
          subtotal: document.getElementById("baseTotal").value,
          shippingCharge: parseFloat(document.getElementById("shippingCharge").innerText.replace("â‚¹", "")),
          discount: parseFloat(document.getElementById("discount").innerText.replace("â‚¹", "")),
          total: parseFloat(document.getElementById("total-amount").innerText.replace("â‚¹", "")),
          couponCode,
          couponId
        }),
      });

      const data = await response.json();
      if (data.success) {
        Swal.fire({
          icon: "success",
          title: "Order Received",
          text: "Your COD order has been placed successfully.",
          confirmButtonText: "Go to Home"
        }).then(() => {
          window.location.href = "/";
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Order Failed",
          text: data.error || "Something went wrong. Please try again.",
        });
      }
    } catch (err) {
      console.error("COD order error:", err);
      Swal.fire({
        icon: "error",
        title: "Error",
        text: "Something went wrong. Please try again.",
      });
    }
  }
});
</script>

<script>
  function validatePhone() {
    const phoneInput = document.getElementById("phone");
    const errorText = document.getElementById("phoneError");
    const phoneValue = phoneInput.value;

    // Only allow digits
    phoneInput.value = phoneValue.replace(/[^0-9]/g, '');

     if (phoneInput.value === "") {
      errorText.style.display = "block";
      errorText.textContent = "Only numbers are allowed.";
    } else {
      errorText.style.display = "none";
    }
  }
</script>

<script>
  function validateEmail() {
    const emailInput = document.getElementById("email");
    const emailError = document.getElementById("emailError");
    const emailValue = emailInput.value;

    const emailPattern = /^[^@\s]+@[^@\s]+\.[^@\s]+$/;

    if (!emailPattern.test(emailValue)) {
      emailError.style.display = "block";
    } else {
      emailError.style.display = "none";
    }
  }
</script>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const codRadio = document.getElementById("radioCod");
  const phonepeRadio = document.getElementById("radioPhonepe");
  const codBtn = document.getElementById("codConfirmBtn");
  const phonepeBtn = document.getElementById("phonepeCheckoutBtn");

  function toggleButtons() {
    if (codRadio.checked) {
      codBtn.style.display = "block";
      phonepeBtn.style.display = "none";
    } else if (phonepeRadio.checked) {
      codBtn.style.display = "none";
      phonepeBtn.style.display = "block";
    }
  }

  codRadio.addEventListener("change", toggleButtons);
  phonepeRadio.addEventListener("change", toggleButtons);

  // initialize on load
  toggleButtons();
});
</script>

<style>
  select {
    position: relative !important;
    z-index: auto !important;
    /* appearance: auto !important; */
}
option {
    position: static !important;
}
</style>
