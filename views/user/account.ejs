
<%- include('./partials/header') %>
<%- include('./partials/userHeader') %>
<div class="axil-dashboard-area axil-section-gap">
            <div class="container">
                <div class="axil-dashboard-warp">
                    <!-- <div class="axil-dashboard-author">
                        <div class="media">
                            <div class="thumbnail">
                                <img src="assets/images/product/author1.png" alt="Hello Annie">
                            </div>
                            <div class="media-body">
                                <h5 class="title mb-0">Hello Annie</h5>
                                <span class="joining-date">Harisree Handlooms Member Since Sep 2020</span>
                            </div>
                        </div>
                    </div> -->
                    <div class="row">
                        <div class="col-xl-3 col-md-4">
                            <aside class="axil-dashboard-aside">
                                <nav class="axil-dashboard-nav">
                                    <div class="nav nav-tabs" role="tablist">
                                        <a class="nav-item nav-link active" data-bs-toggle="tab" href="#nav-dashboard" role="tab" aria-selected="true"><i class="fas fa-th-large"></i>Dashboard</a>
                                        <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-orders" role="tab" aria-selected="false"><i class="fas fa-shopping-basket"></i>Orders</a>
                                        <a class="nav-item nav-link" data-bs-toggle="tab" href="#product-return" role="tab" aria-selected="false"><i class="fa-solid fa-truck-fast"></i>Product Return</a>
                                        <a class="nav-item nav-link" data-bs-toggle="tab" href="#order-tracking" role="tab" aria-selected="false"><i class="fa-solid fa-map-location-dot"></i></i>Order Tracking</a>
                                        <a class="nav-item nav-link" data-bs-toggle="tab" href="#address" role="tab" aria-selected="false"><i class="fas fa-home"></i>Address </a>
                                        <a class="nav-item nav-link" data-bs-toggle="tab" href="#nav-account" role="tab" aria-selected="false"><i class="fas fa-user"></i>Account Details</a>

                                        <a class="nav-item nav-link" href="/signout"><i class="fal fa-sign-out"></i>Logout</a>
                                    </div>
                                </nav>
                            </aside>
                        </div>
                        <div class="col-xl-9 col-md-8">
                            <div class="tab-content">
                                <div class="tab-pane fade show active" id="nav-dashboard" role="tabpanel">
                                    <div class="axil-dashboard-overview">
                                        <div class="welcome-text">Hello <%= user.name %> (not <span><%= user.name %></span> <a href="/signout">Log Out</a>)</div>
                                        <p>From your account dashboard you can view your recent orders, manage your shipping and billing addresses,manage your order return,view your orders and edit your password and account details.</p>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="nav-orders" role="tabpanel">
                                    <div class="axil-dashboard-order">
                                        <div class="table-responsive">
                                            <table class="table">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">Order ID</th>
                                                        <th scope="col">Date</th>
                                                        <th scope="col">Status</th>
                                                        <th scope="col">Total</th>
                                                        <th scope="col">Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                  <% if (user.orders.length === 0) { %>
                                                    <tr>
                                                        <td colspan="5" class="text-center">No orders found.</td>
                                                    </tr>
                                                  <% } else { %>
                                                     <% user.orders.forEach(order => { 
         const o = order.orderId;
         if (!o) return;
         const itemCount = o.items?.length || 0;
         const total = o.total || 0;
    %>
      <tr>
        <th scope="row"><%= o.orderId %></th>
        <td><%= o.createdAt.toLocaleDateString('en-IN') %></td>
        <td><%= o.status %></td>
        <td>₹<%= total.toFixed(2) %> for <%= itemCount %> item<%= itemCount > 1 ? 's' : '' %></td>
        <td><a href="/order?id=<%= o._id %>" class="axil-btn view-btn">View</a></td>
      </tr>
    <% }) %>
                                                  <% } %>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                                 <div class="col-xl-9 col-md-8 ">
                            <div class="tab-content">
                             <div class="tab-pane fade" id="order-tracking" role="tabpanel">
  
      <div class="card-body">
        <h4 class="text-center text-primary mb-4">📦 Track Your Order</h4>

        <!-- Order ID input -->
        <form action="/track" method="GET" class="mb-4">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Enter your Order ID or AWB No." name="trackingId" required>
            <button class="btn btn-primary" type="submit">Track</button>
          </div>
        </form>

        <!-- Dummy DTDC tracking UI -->
        <div class="mb-3">
          <h6>Courier: <span class="fw-semibold">DTDC</span></h6>
          <p><i class="fas fa-barcode me-2"></i><strong>Tracking ID:</strong> DTDC123456789</p>
          <p><i class="fas fa-truck-fast me-2"></i><strong>Estimated Delivery:</strong> July 10, 2025</p>
        </div>

        <!-- Tracking Progress -->
        <div class="mt-4">
          <div class="track-step completed">
            <div>Order Placed <span class="text-muted small"> - July 3, 2025</span></div>
          </div>
          <div class="track-step completed">
            <div>Shipped via DTDC <span class="text-muted small"> - July 4, 2025</span></div>
          </div>
          <div class="track-step">
            <div>In Transit <span class="text-muted small"> - Expected July 7, 2025</span></div>
          </div>
          <div class="track-step">
            <div>Out for Delivery</div>
          </div>
          <div class="track-step">
            <div>Delivered</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <style>
    .track-step {
      position: relative;
      padding-left: 35px;
      margin-bottom: 25px;
    }
    .track-step::before {
      content: '';
      position: absolute;
      left: 7px;
      top: 4px;
      width: 14px;
      height: 14px;
      border-radius: 50%;
      background: #0d6efd;
    }
    .track-step.completed::before {
      background: green;
    }
    .track-step::after {
      content: '';
      position: absolute;
      left: 13px;
      top: 20px;
      height: calc(100% - 20px);
      width: 2px;
      background: #ccc;
    }
    .track-step:last-child::after {
      content: none;
    }
    @media (max-width: 576px) {
      .track-step {
        padding-left: 25px;
        font-size: 0.95rem;
      }
      .track-step::before {
        width: 12px;
        height: 12px;
        top: 5px;
      }
      .track-step::after {
        left: 10px;
      }
      .card-body {
        padding: 1rem;
      }
    }
  </style>
</div>
 <div class="col-xl-9 col-md-8">
<div class="tab-content">
<div class="tab-pane fade" id="product-return" role="tabpanel">
  
    
      <div class="card-body">
        <h3 class="text-center text-danger mb-4">Return Product Request</h3>

      <form id="returnForm">
                  <div class="mb-3">
            <label for="receivedDate" class="form-label">Order Id</label>
       <input type="text" class="form-control" id="orderId" name="orderId" required
  style="display: block; border: 1px solid #ced4da; height: 38px; background-color: white;">
          <div class="mb-3">
            <label for="receivedDate" class="form-label">Product Name</label>
<input type="text" class="form-control" id="productName" name="productName" required
  style="display: block; border: 1px solid #ced4da; height: 38px; background-color: white;">

          <!-- Date of Product Received -->
          <div class="mb-3">
            <label for="receivedDate" class="form-label">Date of Product Received</label>
            <input type="date" class="form-control" id="receivedDate" name="receivedDate" required>
            <small id="dateError" class="text-danger d-none">Return period has expired. Only returns within 7 days are allowed.</small>
          </div>

          <!-- Reason -->
          <div class="mb-3">
            <label for="reason" class="form-label">Reason for Return</label>
            <select class="form-select" id="reason" name="reason" required>
              <option value="" disabled selected>Select a reason</option>
              <option>Damaged product</option>
              <option>Wrong item delivered</option>
              <option>Not as described</option>
              <option>Other</option>
            </select>
          </div>

          <!-- Additional Description -->
          <div class="mb-3">
            <label for="description" class="form-label">Additional Details (optional)</label>
            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
          </div>

          <!-- Upload Image -->
          <div class="mb-3">
            <label for="image" class="form-label">Upload Image (optional)</label>
            <input class="form-control" type="file" id="image" name="image">
          </div>

          <!-- Submit -->
          <div class="d-grid">
            <button type="submit" class="btn btn-danger">Submit Return Request</button>
          </div>
        </form>

        <div class="mt-3 text-center text-muted" style="font-size: 0.9rem;">
          Return requests are allowed only within 7 days of receiving the product.
        </div>
      </div>
    </div>
  </div>


  <script>
  function isReturnValid() {
    const receivedDate = new Date(document.getElementById('receivedDate').value);
    const today = new Date();
    const diffTime = today - receivedDate;
    const diffDays = diffTime / (1000 * 60 * 60 * 24);

    const dateError = document.getElementById('dateError');
    if (diffDays > 7) {
      dateError.classList.remove('d-none');
      return false;
    }
    dateError.classList.add('d-none');
    return true;
  }

  document.getElementById('returnForm').addEventListener('submit', async function (e) {
    e.preventDefault(); // Prevent default form submission

    if (!isReturnValid()) return;

    const form = document.getElementById('returnForm');
    const formData = new FormData(form);

    try {
      const response = await fetch('/return', {
        method: 'POST',
        body: formData
      });

      const result = await response.json();

      if (response.ok && result.success) {
        alert("Return request submitted successfully!");

        // ✅ Redirect explicitly using the redirect URL from response
        if (result.redirect) {
          window.location.href = result.redirect;
        } else {
          window.location.href = '/account'; // fallback
        }
      } else {
        alert("Failed to submit return request. Please try again.");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("An error occurred while submitting the form.");
    }
  });
</script>
</div>


                                 <div class="tab-pane fade" id="address" role="tabpanel">
                                    <div class="axil-dashboard-address">
                                        <p class="notice-text">The following addresses will be used on the checkout page by default.</p>
                                        <div class="row row--30">
                                            <div class="col-lg-6">
                                                <div class="address-info mb--40">
                                                    <div class="addrss-header d-flex align-items-center justify-content-between">
                                                        <h4 class="title mb-0">Shipping Address</h4>
                                                        <!-- <a href="#" class="address-edit"><i class="far fa-edit"></i></a> -->
                                                    </div>
                                                    <ul class="address-details">
                                                        <li>Name: <%= user.name %></li>
                                                        <li>Email: <%= user.email %></li>
                                                        <li>Phone: <%= user.mobile %> </li>
                                                        <% if (user.address && user.address.length > 0 && user.address[0].billing) { %>
  <li class="mt--30">
    <%= user.address[0].billing.name %><br>
    <%= user.address[0].billing.addressLine %> <br>
    <%= user.address[0].billing.city %> <br>
    <%= user.address[0].billing.state %> <br>
    <%= user.address[0].billing.pincode %> <br>
    <%= user.address[0].billing.phone %>
  </li>
<% } else { %>
  <li class="mt--30">No billing address available.</li>
<% } %>

                                                    </ul>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="address-info">
                                                    <div class="addrss-header d-flex align-items-center justify-content-between">
                                                        <h4 class="title mb-0">Billing Address</h4>
                                                        <!-- <a href="#" class="address-edit"><i class="far fa-edit"></i></a> -->
                                                    </div>
                                                    <ul class="address-details">
                                                        <li>Name:<%= user.name %></li>
                                                        <li>Email: <%= user.email %></li>
                                                        <li>Phone: <%= user.mobile %></li>
                                                        <% if (user.address && user.address.length > 0 && user.address[0].shipping) { %>
  <li class="mt--30">
    <%= user.address[0].shipping.name %><br>
    <%= user.address[0].shipping.addressLine %> <br>
    <%= user.address[0].shipping.city %> <br>
    <%= user.address[0].shipping.state %> <br>
    <%= user.address[0].shipping.country %> <br>
    <%= user.address[0].shipping.pincode %> <br>
    <%= user.address[0].shipping.phone %>
  </li>
<% } else { %>
  <li class="mt--30">No shipping address available.</li>
<% } %>

                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div> 
                            <!-- <div class="col-xl-9 col-md-8">
                            <div class="tab-content">
                                <div class="tab-pane fade" id="payment" role="tabpanel">
  <div class="container py-5">
    <div class="card shadow-lg mx-auto" style="max-width: 500px;">
      <div class="card-body text-center">
        <img src="/assets/images/phonepe-logo.png" alt="PhonePe Logo" style="height: 60px;" class="mb-3" />

        <h4 class="mb-4 text-primary">Pay with PhonePe</h4>

        <form action="/pay" method="POST">
          <div class="mb-3 text-start">
            <label class="form-label">Name</label>
            <input type="text" name="name" class="form-control" placeholder="Your Name" required>
          </div>

          <div class="mb-3 text-start">
            <label class="form-label">Phone Number</label>
            <input type="tel" name="phone" class="form-control" placeholder="10-digit mobile number" required pattern="[0-9]{10}">
          </div>

          <div class="mb-3 text-start">
            <label class="form-label">Amount (INR)</label>
            <input type="number" name="amount" class="form-control" placeholder="Enter amount" required min="1">
          </div>

          <button type="submit" class="btn btn-primary w-100">Proceed to Pay</button>
        </form>

        <div class="mt-4 text-muted" style="font-size: 0.9rem;">
          <i>Secure payment powered by PhonePe</i>
        </div>
      </div>
    </div>
  </div>
</div>
</div>

  <style>
    #payment body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    #payment .card {
      border-radius: 20px;
    }

    #payment .btn-primary {
      background-color: #5f259f;
      border: none;
    }

    #payment .btn-primary:hover {
      background-color: #4a1e81;
    }
  </style>
</div> -->
 <div class="col-xl-9 col-md-8">
                            <div class="tab-content">
                                <div class="tab-pane fade" id="nav-account" role="tabpanel">
                                    <div class="col-lg-9">
                                        <div class="axil-dashboard-account">
                                            <form class="account-details-form" id="accountForm">
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label>Name</label>
                                                            <input type="text" class="form-control" id="name" value="<%= user.name %>">
                                                        </div>
                                                    </div>
                                                 
                                                    <div class="col-12">
                                                        <div class="form-group mb--40">
                                                            <label>Country/ Region</label>
                                                            <select id="country">
                                                                
                                                            </select>
                                                            <p class="b3 mt--10">This will be how your name will be displayed in the account section and in reviews</p>
                                                        </div>
                                                    </div> 
                                                    <!-- <div class="col-12">
                                                        <h5 class="title">Password Change</h5>
                                                        <div class="form-group">
                                                            <label>Password</label>
                                                            <input type="password" class="form-control" placeholder="Current Password">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>New Password</label>
                                                            <input type="password" class="form-control">
                                                        </div>
                                                        <div class="form-group">
                                                            <label>Confirm New Password</label>
                                                            <input type="password" class="form-control">
                                                        </div>
                                                        <div class="form-group mb--0">
                                                            <input type="submit" class="axil-btn" value="Save Changes">
                                                        </div>
                                                    </div> -->
                                                    <div class="col-12">
  <h5 class="title">Password Change</h5>

  <!-- Current Password -->
  <div class="form-group">
    <label>Current Password</label>
    <input type="password" class="form-control" id="current-password" name="currentPassword" placeholder="Current Password" required>
        <i class="fakepasswordicon fas fa-eye-slash" style="position: absolute; top: 50%; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
  </div>

  <!-- New Password + Eye + Generate -->
  <div class="form-group position-relative">
    <label>New Password</label>
    <input type="password" class="form-control fakepassword pe-5" id="new-password" name="newPassword" placeholder="New Password" autocomplete="new-password" required>
    <i class="fakepasswordicon fas fa-eye-slash" style="position: absolute; top: 30px; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
    <button type="button" class="btn btn-sm btn-outline-secondary mt-2" id="generate-password-btn">Generate Strong Password</button>
    <div id="password-rules-container" class="d-none">
      <ul id="password-rules" class="text-danger small ps-3 mb-3" style="list-style: none;">
        <li id="rule-length">❌ Minimum 8 characters</li>
        <li id="rule-upper">❌ At least 1 uppercase letter</li>
        <li id="rule-lower">❌ At least 1 lowercase letter</li>
        <li id="rule-number">❌ At least 1 number</li>
        <li id="rule-special">❌ At least 1 special character (@, #, $, *)</li>
      </ul>
    </div>
  </div>

  <!-- Confirm New Password -->
  <div class="form-group">
    <label>Confirm New Password</label>
    <input type="password" class="form-control" id="confirm-password" name="confirmNewPassword" placeholder="Confirm New Password" required disabled>
    <i class="fakepasswordicon fas fa-eye-slash" style="position: absolute; top: 50%; right: 15px; transform: translateY(-50%); cursor: pointer;"></i>
  </div>

  <div class="form-group mb--0">
    <input type="submit" class="axil-btn" value="Save Changes">
  </div>
</div>

                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            </div>
                            </div>
                    
                        </div>
                    </div>
                </div>
            </div>

        <script>
  async function populateCountryDropdowns() {
    try {
      const response = await fetch("/api/countries");
      const countries = await response.json();

      const countrys = document.querySelectorAll("#country");

      countries.forEach(country => {
        const option = document.createElement("option");
        option.value = country;
        option.textContent = country;

        countrys.forEach(select => {
          select.appendChild(option.cloneNode(true));
        });
      });
    } catch (err) {
      console.error("Error fetching country list:", err);
    }
  }

  document.addEventListener("DOMContentLoaded", () => {
    setTimeout(populateCountryDropdowns, 200);
  });
</script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

            <script>
  document.addEventListener("DOMContentLoaded", function () {
    const passwordInput = document.getElementById("new-password");
    const confirmPasswordInput = document.getElementById("confirm-password");
    const ruleContainer = document.getElementById("password-rules-container");

    const rules = {
      length: document.getElementById("rule-length"),
      upper: document.getElementById("rule-upper"),
      lower: document.getElementById("rule-lower"),
      number: document.getElementById("rule-number"),
      special: document.getElementById("rule-special"),
    };

    passwordInput.addEventListener("focus", () => {
      ruleContainer.classList.remove("d-none");
    });

    passwordInput.addEventListener("input", function () {
      const value = passwordInput.value;
      const conditions = {
        length: value.length >= 8,
        upper: /[A-Z]/.test(value),
        lower: /[a-z]/.test(value),
        number: /[0-9]/.test(value),
        special: /[@#$*]/.test(value),
      };

      Object.keys(conditions).forEach(key => {
        if (conditions[key]) {
          rules[key].classList.remove("text-danger");
          rules[key].classList.add("text-success");
          rules[key].textContent = "✅ " + rules[key].textContent.slice(2);
        } else {
          rules[key].classList.add("text-danger");
          rules[key].classList.remove("text-success");
          rules[key].textContent = "❌ " + rules[key].textContent.slice(2);
        }
      });

      const allValid = Object.values(conditions).every(Boolean);
      confirmPasswordInput.disabled = !allValid;
    });

    // document.querySelector(".fakepasswordicon").addEventListener("click", function () {
    //   const isPassword = passwordInput.type === "password";
    //   passwordInput.type = isPassword ? "text" : "password";
    //   confirmPasswordInput.type = isPassword ? "text" : "password";
    //   this.classList.toggle("fa-eye");
    //   this.classList.toggle("fa-eye-slash");
    // });

    function generateStrongPassword() {
      const upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
      const lower = "abcdefghijklmnopqrstuvwxyz";
      const numbers = "0123456789";
      const special = "@#$*";
      const all = upper + lower + numbers + special;

      let password = "";
      password += upper[Math.floor(Math.random() * upper.length)];
      password += lower[Math.floor(Math.random() * lower.length)];
      password += numbers[Math.floor(Math.random() * numbers.length)];
      password += special[Math.floor(Math.random() * special.length)];

      for (let i = password.length; i < 10; i++) {
        password += all[Math.floor(Math.random() * all.length)];
      }

      return password
        .split("")
        .sort(() => 0.5 - Math.random())
        .join("");
    }

    document.getElementById("generate-password-btn").addEventListener("click", () => {
      const generated = generateStrongPassword();
      passwordInput.value = generated;
      passwordInput.dispatchEvent(new Event("input"));
      passwordInput.focus();
    });
  });
</script>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const toggleIcons = document.querySelectorAll(".fakepasswordicon");

  toggleIcons.forEach((icon) => {
    icon.addEventListener("click", function () {
      // Find the associated input (assumes icon is inside or after the input's container)
      const parent = icon.closest(".form-group, .position-relative");
      const input = parent.querySelector("input[type='password'], input[type='text']");

      if (!input) return;

      if (input.type === "password") {
        input.type = "text";
        icon.classList.remove("fa-eye-slash");
        icon.classList.add("fa-eye");
      } else {
        input.type = "password";
        icon.classList.remove("fa-eye");
        icon.classList.add("fa-eye-slash");
      }
    });
  });
});
</script>

<script>
// document.getElementById("accountForm").addEventListener("submit", async function (e) {
//   e.preventDefault();

//   const name = document.querySelector("input[name='name']").value.trim();
//   const country = document.querySelector("#country").value.trim();
//   const currentPassword = document.querySelector("#current-password").value;
//   const newPassword = document.querySelector("#new-password").value;
//   const confirmPassword = document.querySelector("#confirm-password").value;

//   try {
//     const response = await fetch("/account-edit", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({
//         name,
//         country,
//         currentPassword,
//         newPassword,
//         confirmPassword,
//       }),
//     });

//     const data = await response.json();

//     if (response.ok) {
//       alert("Account details updated successfully!");
//       location.reload(); // or redirect if needed
//     } else {
//       alert(data.message || "Something went wrong.");
//     }
//   } catch (err) {
//     console.error("Error:", err);
//     alert("An error occurred.");
//   }
// });

document.addEventListener("DOMContentLoaded", () => {
  const accountForm = document.querySelector(".account-details-form");
  if (!accountForm) {
    console.error("Form not found!");
    return;
  }

  accountForm.addEventListener("submit", async function (e) {
    e.preventDefault();
    console.log("Submitting account edit form...");

    // Grab field values
    const name = document.querySelector("#name").value.trim();
    const country = document.querySelector("#country").value.trim();
    const currentPassword = document.querySelector("#current-password").value;
    const newPassword = document.querySelector("#new-password").value;
    const confirmPassword = document.querySelector("#confirm-password").value;

    try {
      const response = await fetch("/account-edit", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          name,
          country,
          currentPassword,
          newPassword,
          confirmPassword,
        }),
      });

      const data = await response.json();
      console.log("Response received:", data);

      if (response.ok) {
        alert("Account details updated successfully!");
        location.reload();
      } else {
        alert(data.message || "Something went wrong.");
      }
    } catch (err) {
      console.error("Error during fetch:", err);
      alert("An error occurred.");
    }
  });
});

</script>

             <%- include('./partials/footer') %>
        </div>
