<%- include('./partials/header') %>
    <%- include('./partials/userHeader') %>

        <div class="axil-product-cart-area axil-section-gap">
            <div class="container">
                <div class="axil-product-cart-wrap">
                    <div class="product-table-heading">
                        <h4 class="title">Your Cart</h4>
                        <!-- <a href="#" class="cart-clear">Clear Shoping Cart</a> -->
                    </div>
                    <div class="table-responsive">
                        <table class="table axil-product-table axil-cart-table mb--40">
                            <thead>
                                <tr>
                                    <th scope="col" class="product-remove"></th>
                                    <th scope="col" class="product-thumbnail">Product</th>
                                    <th scope="col" class="product-title"></th>
                                    <th scope="col" class="product-price">Price</th>
                                    <th scope="col" class="product-quantity">Quantity</th>
                                    <th scope="col" class="product-subtotal">Subtotal</th>
                                </tr>
                            </thead>
                            
                            <tbody id="cart-body">
                                <% if (carts.length===0) { %>
                                    <tr>
                                        <td colspan="6" class="text-center">Your cart is empty.</td>
                                    </tr>
                                    <% } else { %>
                                        <% carts.forEach(item=> {
                                            const product = item.productId;
                                             if (!product) return;
                                              const inStock = product.isAvailable;
                                            %>
                                            <!-- <tr data-id="<%= product._id %>" class="cart-row"> -->
                                              <tr data-id="<%= product._id %>" data-instock="<%= inStock ? 'true' : 'false' %>" class="cart-row">
                                                <td class="product-remove">
                                                    <a href="#" class="remove-from-cart" data-id="<%= product._id %>" data-instock="<%= inStock ? 'true' : 'false' %>">
                                                        <i class="fal fa-times"></i>
                                                    </a>
                                                </td>
                                                <td class="product-thumbnail">
                                                    <a href="/product?id=<%= product._id %>">
                                                        <img src="<%= product.images[0] %>" alt="<%= product.name %>">
                                                    </a>
                                                </td>
                                                <td class="product-title">
                                                    <a href="/product?id=<%= product._id %>">
                                                        <%= product.name %>
                                                    </a>
                                                </td>
                                                <!-- <td class="product-price" data-title="Price"><span class="currency-symbol">₹</span><%= product.discount || product.price %></td> -->
                                                <!-- <td class="product-price" data-title="Price"
                                                    data-price="<%= product.discount || product.price %>">
                                                    <span class="currency-symbol">₹</span>
                                                    <%= product.discount || product.price %>
                                                </td> -->
                                                <td class="product-price" data-title="Price"
                data-price="<%= inStock ? (product.discount || product.price) : 0 %>">
                <% if (inStock) { %>
                    <span class="currency-symbol">₹</span><%= product.discount || product.price %>
                <% } else { %>
                    <span class="text-danger">Out of Stock</span>
                <% } %>
            </td>

                                                <td class="product-quantity" data-title="Qty">
                                                    <div class="pro-qty">
                                                        <input type="number" class="quantity-input" value="1" min="1" />
                                                    </div>
                                                </td>
                                                <!-- <td class="product-subtotal" data-title="Subtotal">
                                                    <span class="currency-symbol">₹</span><span class="subtotal-value">
                                                        <%= product.discount || product.price %>
                                                    </span>
                                                </td> -->
                                                 <td class="product-subtotal" data-title="Subtotal">
                <% if (inStock) { %>
                    <span class="currency-symbol">₹</span><span class="subtotal-value">
                        <%= product.discount || product.price %>
                    </span>
                <% } else { %>
                    -
                <% } %>
            </td>
                                            </tr>
                                            <% }) %>
                                                <% } %>
                            </tbody>

                        </table>
                    </div>
                    <div class="row">
                        <div class="col-xl-5 col-lg-7 offset-xl-7 offset-lg-5">
                            <div class="axil-order-summery mt--20">
                                <h5 class="title mb--20">Order Summary</h5>
                                <div class="summery-table-wrap">
                                    <table class="table summery-table mb--30">
                                        <tbody>
                                            <tr class="order-total">
                                                <td>Total</td>
                                                <!-- <td class="order-total-amount">$125.00</td> -->
                                                <td class="order-total-amount text-warning">₹<span id="cart-total">0</span></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                
<form id="checkout-form" action="/checkout" method="POST">
  <input type="hidden" name="cartData" id="cartDataInput">
  <button type="submit" class="axil-btn checkout-btn" style="background-color: #FFC107;">Process to Checkout</button>
</form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <%- include('./partials/footer') %>
            </div>

<script>
// function updateCartTotals() {
//   let total = 0;
//   const cartSummary = [];

//   document.querySelectorAll(".cart-row").forEach(row => {
//     const productId = row.dataset.id;
//     const productName = row.querySelector(".product-title a").textContent.trim();
//     const price = parseFloat(row.querySelector(".product-price").dataset.price);
//     const qty = parseInt(row.querySelector(".quantity-input").value) || 1;
    
    
//     const subtotal = price * qty;

//     row.querySelector(".subtotal-value").textContent = subtotal.toFixed(2);

//     total += subtotal;

//     cartSummary.push({
//       productId: productId, 
//       name: productName,
//       quantity: qty,
//       price: price,
//       subtotal: subtotal.toFixed(2)
//     });
//   });

//   const cartDataInput = document.getElementById("cartDataInput");
//   if (cartDataInput) {
//     cartDataInput.value = JSON.stringify({
//       items: cartSummary,
//       total: total.toFixed(2)
//     });
//   }

//   document.getElementById("cart-total").textContent = total.toFixed(2);
// }

function updateCartTotals() {
  let total = 0;
  const cartSummary = [];

  document.querySelectorAll(".cart-row").forEach(row => {
    const inStock = row.dataset.instock === "true";
    if (!inStock) return; // Skip out-of-stock

    const productId = row.dataset.id;
    const productName = row.querySelector(".product-title a").textContent.trim();
    const price = parseFloat(row.querySelector(".product-price").dataset.price);
    const qty = parseInt(row.querySelector(".quantity-input").value) || 1;

    const subtotal = price * qty;
    row.querySelector(".subtotal-value").textContent = subtotal.toFixed(2);

    total += subtotal;

    cartSummary.push({
      productId,
      name: productName,
      quantity: qty,
      price,
      subtotal: subtotal.toFixed(2)
    });
  });

  document.getElementById("cartDataInput").value = JSON.stringify({
    items: cartSummary,
    total: total.toFixed(2)
  });

  document.getElementById("cart-total").textContent = total.toFixed(2);

  const checkoutBtn = document.querySelector(".checkout-btn");
  if (total <= 0) {
    checkoutBtn.disabled = true;
    checkoutBtn.classList.add("disabled");
  } else {
    checkoutBtn.disabled = false;
    checkoutBtn.classList.remove("disabled");
  }
}

document.addEventListener("DOMContentLoaded", function () {
  // Initial update
  updateCartTotals();

  // On quantity change
  document.querySelectorAll(".quantity-input").forEach(input => {
    input.addEventListener("input", updateCartTotals);
    input.addEventListener("change", updateCartTotals);
  });

  // Before form submit, re-run updateCartTotals()
  document.getElementById("checkout-form").addEventListener("submit", function (e) {
    updateCartTotals(); // ⬅️ Ensure input is set just before submit
      const total = parseFloat(document.getElementById("cart-total").textContent);

  if (total <= 0) {
    e.preventDefault();
    Swal.fire({
          icon: "warning",
          title: "Cannot Checkout",
          text: "Your cart is empty or all items are out of stock."
        });
    return;
  }
  });

  // Remove item from cart
 document.querySelectorAll(".remove-from-cart").forEach(el => {
  el.addEventListener("click", function (e) {
    e.preventDefault();
    const productId = this.dataset.id;
    const row = this.closest(".cart-row");

    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to remove this item from your cart?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#6c757d',
      confirmButtonText: 'Yes, remove it!'
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const res = await fetch(`/cart/remove?id=${productId}`, {
            method: "DELETE",
          });

          const data = await res.json();

          if (data.success) {
            row.remove();
            updateCartTotals();

            Swal.fire({
              icon: 'success',
              title: 'Item removed!',
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Oops!',
              text: data.message || "Could not remove item.",
            });
          }
        } catch (err) {
          console.error("Error:", err);
          Swal.fire({
            icon: 'error',
            title: 'Something went wrong!',
            text: 'Please try again later.',
          });
        }
      }
    });
  });
});

  el.addEventListener("click", async function (e) {
    e.preventDefault();
    const productId = this.dataset.id;

    try {
      const res = await fetch(`/cart/remove?id=${productId}`, {
        method: "DELETE",
      });

      const data = await res.json();

      if (data.success) {
        this.closest(".cart-row").remove();
        updateCartTotals();

        Swal.fire({
          icon: 'success',
          title: 'Item removed from cart!',
          showConfirmButton: false,
          timer: 1500
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Oops!',
          text: data.message || "Could not remove item.",
        });
      }
    } catch (err) {
      console.error("Error:", err);
      Swal.fire({
        icon: 'error',
        title: 'Something went wrong!',
        text: 'Please try again later.',
      });
    }
  });
});

</script>

