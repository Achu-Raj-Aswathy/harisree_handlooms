<%- include('./partials/header') %>
<%- include('./partials/userHeader') %>

<!-- ✅ AOS CSS (place after your existing CSS link) -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css" rel="stylesheet" />

<div class="main-wrapper">
  <div class="axil-shop-area axil-section-gap bg-color-white">
    <div class="container">
      <!-- Unified Sort By Dropdown with Styled Appearance -->
<div class="row align-items-end mb-4">
  <div class="col-lg-6 mb-3 position-relative">
    <div class="custom-dropdown">
      <button class="dropdown-toggle-custom" onclick="toggleCustomDropdown()">
        <span id="dropdownLabel">Sort By </span>
        <i class="fa-solid fa-chevron-down"></i>
      </button>
      <ul id="customDropdownMenu" class="dropdown-menu-custom">
       
        <li onclick="selectDropdownOption('Sort By Latest')">Sort By Latest</li>
         <li id="sortByCategoryItem" onmouseenter="showCategoryDropdown()" onmouseleave="hideCategoryDropdown()" onclick="toggleMobileCategoryDropdown()" style="position: relative;">
  Sort By Category
  <ul id="categorySubMenu" class="dropdown-submenu-custom">
    <% categories.forEach(cat => { %>
      <li onclick="handleCategoryChange('<%= cat.name %>')"><%= cat.name %></li>
    <% }) %>
  </ul>
</li>

        <li onclick="selectDropdownOption('Sort By Price: Low To High')">Sort By Price: Low To High</li>
        <li onclick="selectDropdownOption('Sort By Price: High To Low')">Sort By Price: High To Low</li>
      </ul>
    </div>
  </div>
</div>

      <!-- Product Grid -->
      <div class="row gy-4" id="productGrid">
        <!-- Products will be rendered here -->
      </div>
    </div>
  </div>
</div>

<script>
  const allProducts = <%- JSON.stringify(products) %>;
  let filtered = [...allProducts];

  function renderProducts(products) {
    const grid = document.getElementById('productGrid');
    grid.innerHTML = "";

    if (products.length === 0) {
      grid.innerHTML = `<div class="text-center"><p>No products in this range.</p></div>`;
      return;
    }

//     products.forEach(product => {
// const html = `
//   <div class="col-12 col-sm-6 col-md-4 col-lg-3 product-card" data-aos="fade-up" data-aos-duration="800">
//     <div class="axil-product product-style-one d-flex flex-column flex-sm-column flex-md-column flex-lg-column flex-xl-column small-screen-card" style="gap: 10px;">
//       <div class="thumbnail flex-shrink-0" style="width: 100%; height: 250px; overflow: hidden; border-radius: 10px; box-shadow: 0 4px 12px rgba(0,0,0,0.08);">
//         <img src="${product.image}" alt="${product.name}" style="width: 100%; height: 100%; object-fit: cover;" />
//         ${product.discount ? `<div class="label-block label-right"><div class="product-badget">${product.discount}</div></div>` : ""}
//       </div>
//       <div class="product-content text-center text-sm-start px-2">
//         <h5 class="title">${product.name}</h5>
//         <div class="product-price-variant mb-1">
//           ${product.oldPrice ? `<span class="price old-price me-2" style="text-decoration: line-through; color: #888;">₹${product.oldPrice}</span>` : ""}
//           <span class="price current-price fw-bold" style="color: #000;">₹${product.price}</span>
//         </div>
//         <a href="/product" class="axil-btn btn btn-warning text-white fw-semibold">View Details</a>
//       </div>
//     </div>
//   </div>`;

//       grid.innerHTML += html;
//     });

  products.forEach(product => {
    const imageUrl = product.images && product.images.length > 0 ? product.images[0] : "/assets/images/default.jpg";
    const discountAmount = product.discount || 0;
    const oldPrice = product.price;
    const finalPrice = product.discount;
    const discountPrice = oldPrice - finalPrice;
    const discountPercentage = Math.floor((discountPrice/oldPrice)*100);
    const discountLabel = discountPercentage ? `${discountPercentage}% OFF` : '';

    const html = `
      <div class="col-12 col-sm-6 col-md-4 col-lg-3 product-card" data-aos="fade-up" data-aos-duration="800">
        <div class="axil-product product-style-one d-flex flex-column flex-sm-column flex-md-column flex-lg-column flex-xl-column small-screen-card" style="gap: 10px;">
          <div class="thumbnail flex-shrink-0" style="width: 100%; height: 250px; overflow: hidden; border-radius: 10px; box-shadow: 0 4px 12px rgba(0,0,0,0.08);">
            <img src="${imageUrl}" alt="${product.name}" style="width: 100%; height: 100%; object-fit: cover;" />
            ${discountLabel ? `<div class="label-block label-right"><div class="product-badget">${discountLabel}</div></div>` : ""}
          </div>
          <div class="product-content text-center text-sm-start px-2">
            <h5 class="title">${product.name}</h5>
            <div class="product-price-variant mb-1">
              ${discountAmount ? `<span class="price old-price me-2" style="text-decoration: line-through; color: #888;">₹${oldPrice}</span>` : ""}
              <span class="price current-price fw-bold" style="color: #000;">₹${finalPrice}</span>
            </div>
            <a href="/product?id=${product._id}" class="axil-btn btn btn-warning text-white fw-semibold">View Details</a>
          </div>
        </div>
      </div>`;
    grid.innerHTML += html;
  });

    // Reinitialize AOS after DOM update
    AOS.init();
  }

  function handlePriceFilter(value) {
    let min = 0, max = Infinity;
    if (value === "0 - 100") [min, max] = [0, 100];
    else if (value === "100 - 500") [min, max] = [100, 500];
    else if (value === "500 - 1000") [min, max] = [500, 1000];
    else if (value === "1000 - 1500") [min, max] = [1000, 1500];
    filtered = allProducts.filter(p => p.price >= min && p.price <= max);
    renderProducts(filtered);
  }

  function handleCategoryChange(value) {
    if (value === "Saree") window.location.href = "/category/sarees";
    else if (value === "SetSaree") window.location.href = "/category/setsaree";
    else if (value === "SetMund") window.location.href = "/category/setmund";
    else if (value === "Dhoti") window.location.href = "/category/dhoti";
  }

  // Initial render
  renderProducts(filtered);
</script>

<!-- ✅ AOS Script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js"></script>
<script>
  AOS.init({ duration: 800, once: true });
</script>


<script>
  function handleCategoryChange(category) {
    if (category) {
      window.location.href = `/shop?category=${encodeURIComponent(category)}`;
    } else {
      window.location.href = `/shop`;
    }
  }
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Ensure the dropdown menu is hidden on page load
    const dropdown = document.getElementById('customDropdownMenu');
    dropdown.style.display = 'none';
  });
</script>


<script>
function toggleCustomDropdown() {
  const menu = document.getElementById('customDropdownMenu');
  menu.style.display = menu.style.display === 'block' ? 'none' : 'block';
}

function selectDropdownOption(optionText) {
  document.getElementById('dropdownLabel').innerText = optionText;
  document.getElementById('customDropdownMenu').style.display = 'none';

  // You can add your actual sorting function here:
  if (optionText === "Sort By Price: Low To High") {
    filtered.sort((a, b) => a.price - b.price);
  } else if (optionText === "Sort By Price: High To Low") {
    filtered.sort((a, b) => b.price - a.price);
  } else if (optionText === "Sort By Latest") {
    // Optional: implement logic
  } else if (optionText === "Sort By Popularity") {
    // Optional: implement logic
  }

  renderProducts(filtered);
}

// Close dropdown if clicked outside
document.addEventListener('click', function(e) {
  const dropdown = document.querySelector('.custom-dropdown');
  if (!dropdown.contains(e.target)) {
    document.getElementById('customDropdownMenu').style.display = 'none';
  }
});
</script>

<script>
  const backendCategories = <%- JSON.stringify(categories) %>;
</script>


<script>
let categoryMenuLoaded = false;

function loadCategoryDropdown() {
  const submenu = document.getElementById('categorySubMenu');

  if (categoryMenuLoaded) {
    submenu.style.display = 'block';
    return;
  }

  submenu.innerHTML = '';

  backendCategories.forEach(cat => {
    const li = document.createElement('li');
    li.textContent = cat.name;
    li.onclick = () => handleCategoryChange(cat.name);
    submenu.appendChild(li);
  });

  submenu.style.display = 'block';
  categoryMenuLoaded = true;
}

// Close submenu on outside click
document.addEventListener('click', (e) => {
  const sortItem = document.getElementById('sortByCategoryItem');
  const submenu = document.getElementById('categorySubMenu');
  if (!sortItem.contains(e.target)) {
    submenu.style.display = 'none';
  }
});
</script>
<script>
  function showCategoryDropdown() {
    if (window.innerWidth >= 768) {
      document.getElementById('categorySubMenu').style.display = 'block';
    }
  }

  function hideCategoryDropdown() {
    if (window.innerWidth >= 768) {
      document.getElementById('categorySubMenu').style.display = 'none';
    }
  }

  function toggleMobileCategoryDropdown() {
    if (window.innerWidth < 768) {
      const submenu = document.getElementById('categorySubMenu');
      submenu.style.display = submenu.style.display === 'block' ? 'none' : 'block';
    }
  }
</script>


<style>
@media (max-width: 479.98px) {
  .small-screen-card {
    flex-direction: row !important;
    align-items: center;
  }

  .small-screen-card .thumbnail {
    width: 45% !important;
    height: 120px !important;
  }

  .small-screen-card .product-content {
    flex: 1;
    padding-left: 10px;
    text-align: left !important;
  }

  .small-screen-card .title {
    font-size: 1rem;
    margin-bottom: 4px;
  }

  .small-screen-card .product-price-variant {
    font-size: 0.95rem;
  }

  .small-screen-card .axil-btn {
    font-size: 0.9rem;
    padding: 4px 8px;
  }
</style>
<style>
.custom-dropdown {
  position: relative;
  font-family: 'Poppins', sans-serif;
}

.dropdown-toggle-custom {
  width: 100%;
  padding: 12px 16px;
  font-size: 1.1rem;
  text-align: left;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.05);
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

.dropdown-menu-custom {
  display: none; /* Hidden by default */
  list-style: none;
  margin: 0;
  padding: 10px 0;
  position: absolute;
  top: 105%;
  left: 0;
  right: 0;
  background: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  z-index: 1000;
}

.dropdown-menu-custom li {
  padding: 10px 18px;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.2s ease;
}

.dropdown-menu-custom li:hover {
  background-color: #f4f4f4;
}
}
</style>

<style>
.dropdown-submenu-custom {
  position: absolute;
  top: 0;
  left: 100%;
  min-width: 180px;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
  display: none;
  z-index: 1001;
}

/* Mobile view adjustment */
@media (max-width: 767.98px) {
  .dropdown-submenu-custom {
    position: static;
    width: 100%;
    background-color: #f9f9f9;
    border: none;
    box-shadow: none;
    padding-left: 20px;
    display: none;
  }

  .dropdown-submenu-custom li {
    padding: 8px 10px;
  }
}


</style>


<%- include('./partials/footer') %>

