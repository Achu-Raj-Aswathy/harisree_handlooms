<%- include('./partials/header') %>
<%- include('./partials/adminHeader') %>

     <!-- START Wrapper -->
     <div class="wrapper">
<%- include('./partials/sidebar') %>

          <!-- ==================================================== -->
          <!-- Start right Content here -->
          <!-- ==================================================== -->
          <div class="page-content">

               <!-- Start Container Fluid -->
               <div class="container-xxl">                   

                    <div class="row">
                         <div class="col-xl-12">
                              <div class="card">
                                   <div class="d-flex card-header justify-content-between align-items-center">
                                     <h4 class="card-title mb-0">All Warehouse List</h4>
                                     <div class="d-flex flex-wrap gap-2 mt-2 mt-md-0">

    <!-- 🔍 Search -->
    <form class="app-search d-md-block ms-2" action="/admin/inventory" method="get">
      <div class="position-relative">
        <input type="search" name="search" class="form-control" placeholder="Search..." autocomplete="off" value="<%= typeof search !== 'undefined' ? search : '' %>">
        <iconify-icon icon="solar:magnifer-linear" class="search-widget-icon position-absolute top-50 end-0 translate-middle-y me-2"></iconify-icon>
      </div>
    </form>

    <!-- ⬇️ Sort by Category -->
    <form action="/admin/inventory" method="get" class="ms-2">
      <select name="category" class="form-select" onchange="this.form.submit()">
        <option value="">Sort by Category</option>
        <% categories.forEach(cat => { %>
          <option value="<%= cat._id %>" <%= category == cat._id ? 'selected' : '' %>><%= cat.name %></option>
        <% }) %>
      </select>
    </form>

  </div>
                                        <a href="#" class="btn btn-sm btn-outline-light" data-bs-toggle="modal" data-bs-target="#exportModal">Export</a>
                                   </div>
                                   <div>
                                        <div class="table-responsive">
                                             <table class="table align-middle mb-0 table-hover table-centered">
                                                  <thead class="bg-light-subtle">
                                                       <tr>
                                                          
                                                            <th>Product ID</th>
                                                            <th>Product Name</th>
                                                            
                                                            <th>Price</th>
                                                            <th>Discount Price</th>
                                                            <th>Stock</th>
                                                            <th>Shipped Stock</th>
                                                            <th>Stock Available </th>
                                                            <th>Total Revenue</th>
                                                            <th>Update Stock</th>
                                                       </tr>
                                                  </thead>
                                                  <tbody>
                                                        <% if(products.length>0){ %>
                                                            <% products.forEach((product)=> { %>
                                                       <tr data-created="<%= new Date(product.createdAt).toISOString() %>">                                                          
                                                            <td>
                                                              <a href="/admin/product-details?id=<%= product._id %>"><%=  product.productId %></a>
                                                            </td>
                                                            <td><%= product.name %></td>
                                                            <td> <%= product.price %></td>
                                                            <td><%= product.discount %></td>
                                                            <td><%= product.stock  %></td>
                                                           
                                                            <% let TotalStock=product.stock;
                                                            let availableStock= product.availableStock;
                                                            let Shippedstock=TotalStock-availableStock;
                                                            let price=product.discount;
                                                            let TotalRevenue=Shippedstock*price;
                                                            %>

                                                            <td><%= Shippedstock %></td>
                                                            <td><%= product.availableStock %>
                                                            <% if (product.availableStock <= product.lowStockLimit) { %>
    <iconify-icon 
      icon="mdi:arrow-down-bold" 
      class="text-danger ms-1">
    </iconify-icon>
  <% } else { %>
    <iconify-icon 
      icon="mdi:arrow-up-bold" 
      class="text-success ms-1">
    </iconify-icon>
  <% } %>
</td>
                                                            <td><%= TotalRevenue %></td>
                                                            <td>
  <div class="d-flex gap-2">
    <input 
      type="number" 
      id="stock-input-<%= product._id %>" 
      value="<%= product.availableStock %>" 
      min="0" 
      class="form-control form-control-sm" >
    <button 
      type="button" 
      class="btn btn-sm btn-primary" 
      onclick="confirmUpdateStock('<%= product._id %>')">
      Update
    </button>
  </div>
</td>

                                                       </tr>
                                                            <% }) %>
                                                                                <% } else { %>
                                                                                     <tr>
                                                                                           <td colspan="7" class="text-center">No products found</td>
                                                                                     </tr>
                                                                                     <% } %>
                                                  </tbody>
                                             </table>
                                        </div>
                                        <!-- end table-responsive -->
                                   </div>
                                   <div class="card-footer border-top">
                                        <nav aria-label="Page navigation example">
    <ul class="pagination justify-content-end mb-0">
      <% if (currentPage > 1) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
        </li>
      <% } else { %>
        <li class="page-item disabled">
          <span class="page-link">Previous</span>
        </li>
      <% } %>

      <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
        </li>
      <% } %>

      <% if (currentPage < totalPages) { %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
        </li>
      <% } else { %>
        <li class="page-item disabled">
          <span class="page-link">Next</span>
        </li>
      <% } %>
    </ul>
  </nav>
                                   </div>
                              </div>
                         </div>

                    </div>

               </div>
               <!-- End Container Fluid -->

               <!-- ========== Footer Start ========== -->
               <%- include('./partials/footer') %>
               <!-- ========== Footer End ========== -->

          </div>
          <!-- ==================================================== -->
          <!-- End Page Content -->
          <!-- ==================================================== -->
    
     <!-- END Wrapper -->

</div>

<!-- Export Modal -->
<div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Select Date Range</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <input type="text" id="dateRangeInput" class="form-control" placeholder="Select date range" />
        <div id="dateError" class="text-danger d-none mt-2">Please select a valid date range</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-warning" onclick="downloadInventoryPDF()">Download PDF</button>
      </div>
    </div>
  </div>
</div>

<!-- SweetAlert2 CDN (if not already included) -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  let selectedStartDate = null;
  let selectedEndDate = null;

  flatpickr("#dateRangeInput", {
    mode: "range",
    dateFormat: "d/m/Y",
    onChange: function (selectedDates) {
      if (selectedDates.length === 2) {
        selectedStartDate = selectedDates[0];
        selectedEndDate = selectedDates[1];
      }
    }
  });

  async function downloadInventoryPDF() {
    if (!selectedStartDate || !selectedEndDate || selectedEndDate < selectedStartDate) {
      Swal.fire({
        icon: 'warning',
        title: 'Invalid Date Range',
        text: 'Please select a valid start and end date.',
      });
      return;
    }

    const formattedStart = selectedStartDate.toISOString();
    const formattedEnd = selectedEndDate.toISOString();

    try {
    const response = await fetch("/admin/export-inventory-pdf", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        startDate: formattedStart,
        endDate: formattedEnd,
      }),
    });

    if (!response.ok) {
      const errorMsg = await response.text();
      Swal.fire({
        icon: 'warning',
        title: 'No Data',
        text: errorMsg || 'No results found for the selected date range.',
      });
      return;
    }

    // ✅ Download PDF
    const blob = await response.blob();
    const url = URL.createObjectURL(blob);

    const a = document.createElement("a");
    a.href = url;
    a.download = `inventory_${selectedStartDate.toLocaleDateString()}-${selectedEndDate.toLocaleDateString()}.pdf`;
    document.body.appendChild(a);
    a.click();
    a.remove();

    Swal.fire({
      icon: 'success',
      title: 'Export Complete',
      text: 'Your inventory PDF has been downloaded.',
      timer: 2000,
      showConfirmButton: false
    });

    bootstrap.Modal.getInstance(document.getElementById('exportModal')).hide();
    document.getElementById("dateRangeInput").value = "";
    selectedStartDate = null;
    selectedEndDate = null;

  } catch (err) {
    Swal.fire({
      icon: 'error',
      title: 'Export Failed',
      text: 'Something went wrong while generating the PDF.',
    });
    console.error(err);
  }
  }
</script>

<script>
  async function confirmUpdateStock(productId) {
    const stockValue = document.getElementById(`stock-input-${productId}`).value;

    if (stockValue === "" || isNaN(stockValue) || stockValue < 0) {
      Swal.fire({
        icon: "warning",
        title: "Invalid Input",
        text: "Please enter a valid stock number",
      });
      return;
    }

    const result = await Swal.fire({
      title: "Update Stock?",
      text: `Set available stock to ${stockValue}?`,
      icon: "question",
      showCancelButton: true,
      confirmButtonText: "Yes, update it!",
      cancelButtonText: "Cancel",
    });

    if (!result.isConfirmed) return;

    try {
      const response = await fetch(`/admin/update-stock/${productId}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ availableStock: stockValue }),
      });

      const data = await response.json();

      if (response.ok && data.success) {
        Swal.fire({
          icon: "success",
          title: "Updated!",
          text: data.message || "Stock updated successfully.",
          timer: 2000,
          showConfirmButton: false,
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Update Failed",
          text: data.message || "Could not update stock.",
        });
      }
    } catch (err) {
      console.error(err);
      Swal.fire({
        icon: "error",
        title: "Server Error",
        text: "Something went wrong while updating stock.",
      });
    }
  }
</script>